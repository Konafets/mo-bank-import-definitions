' ---------------------------------------------------------------------------------
' Importdefinition für VrNetWorld CSV Export
'    Importeinstellungen:
'    Quelle                     : Textdatei (*)
'    Trennzeichen für Felder    : Semikolon
'    Trennzeichen für Datensätze: LF
'    Zeichensatz für            : IsoLatin1 (Windows)
'    Text in Anführungszeichen  : Doppelt"
' ---------------------------------------------------------------------------------

' Aktionen nur im ersten Durchlauf ausführen: Variablen deklarieren
if ( NOT HasVariable("zeile") )
    dim zeile as number
endif

' Die Umsatzdaten beginnen erst ab Zeile 2, die Zeile davor verwerfen
set zeile to zeile + 1
if ( zeile < 2 )
    set Vorlage_Zeile_OK to FALSE
    exit
endif

' Abbrechen, wenn nicht mindestens 11 Felder in Importdatei vorhanden sind
if ( NOT HasVariable("Spalte_011") )
    beep
    msgBox("Fehler beim Lesen der Volksbank-Exportatei (Ungültiges Datensatzformat)!")
    set Vorlage_Import_OK to FALSE
    exit
endif

' Nur Zeilen mit echten Buchungsbeträgen importieren
if ( Spalte_006 = "" OR Spalte_003 = "0,00")
    set Vorlage_Zeile_OK to FALSE
    exit
endif

' ---------------------------------------------------------------------------------
' Importfelder den Datenfeldern zuordnen
' ---------------------------------------------------------------------------------
' Fortlaufende Buchhungsnummer
set Vorlage_Datum to TextToDate(Spalte_002)

' Referenz
if(Spalte_006 <> "")
    set Vorlage_Referenz to Spalte_005
endif

' Text
if ( Spalte_006 <> "" )
    set Vorlage_Text to ReplaceAll(Spalte_006, "  ", "")
endif

' Betrag
set Vorlage_Betrag to FTextToNumber(Spalte_003)

' Notizen
if (Spalte_006 <> "")
    set Vorlage_Notizen to "Auftragsart: " + Spalte_007
endif

' ---------------------------------------------------------------------------------
' Optional: Belegvervollständigung
' ---------------------------------------------------------------------------------

' Debitoren-/Kreditorenkonto bei gefundenem OP zuweisen
'set Vorlage_Konto to GetKontoDebitor(Vorlage_Text, Vorlage_Betrag)
'set Vorlage_Konto to IfThen(Vorlage_Konto = "", GetKontoKreditor(Vorlage_Text, Vorlage_Betrag), Vorlage_Konto)

' Set Text
'set Vorlage_Konto to IfThen(PatternCount(Vorlage_Text, "Gehalt") > 0, "1740", Vorlage_Konto)
'set Vorlage_Nummernkreis to "Giro"
